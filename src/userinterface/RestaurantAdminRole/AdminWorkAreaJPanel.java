

package userinterface.RestaurantAdminRole;


import Business.Customer.Patient;
import Business.EcoSystem;
import Business.Hospital.Hospital;
import Business.UserAccount.UserAccount;
import Business.Vaccine.VaccineProduct;
import Business.WorkQueue.BookingRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.HospitalRole.HospitalAreaJPanel;
import userinterface.SystemAdminWorkArea.ManageHospitalsJPanel;

/**
 *
 * @author  raunak
 */
public class AdminWorkAreaJPanel extends javax.swing.JPanel {
    
    JPanel userProcessContainer;
    EcoSystem system;
    UserAccount ua;
    BookingRequest br;
    /** Creates new form AdminWorkAreaJPanel */
    public AdminWorkAreaJPanel(JPanel userProcessContainer, EcoSystem system, UserAccount ua) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.system = system;
        this.ua = ua;
        populateHospitalName();
        populatePatientWorkRequestJTable();
        populateAvailableVaccinesJTable();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        manageEmployeeJButton = new javax.swing.JButton();
        manageOrganizationJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        availableVaccinesJTable = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        patientWorkRequestJTable = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel1.setText("My Work Area -Adminstrative Role");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, -1, -1));

        manageEmployeeJButton.setText("Manage Vaccines");
        manageEmployeeJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageEmployeeJButtonActionPerformed(evt);
            }
        });
        add(manageEmployeeJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 550, 150, -1));

        manageOrganizationJButton.setText("Manage Patients");
        manageOrganizationJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                manageOrganizationJButtonActionPerformed(evt);
            }
        });
        add(manageOrganizationJButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 550, -1, -1));

        enterpriseLabel.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        enterpriseLabel.setText("Hospital :");
        add(enterpriseLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 120, 30));

        valueLabel.setText("<value>");
        add(valueLabel, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 50, 130, -1));

        availableVaccinesJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Vaccine Type", "Number of Vaccines"
            }
        ));
        jScrollPane1.setViewportView(availableVaccinesJTable);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 90, 330, 180));

        patientWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Vaccine Type Needed"
            }
        ));
        jScrollPane2.setViewportView(patientWorkRequestJTable);

        add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 90, 330, 180));

        jButton1.setText("Administer Vaccines");
        add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 290, 250, 70));
    }// </editor-fold>//GEN-END:initComponents

    private void manageEmployeeJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageEmployeeJButtonActionPerformed
        ManageVaccinesJPanel manageVaccinesJPanels = new ManageVaccinesJPanel(userProcessContainer, ua, system);
        userProcessContainer.add("manageVaccinesJPanels", manageVaccinesJPanels);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageEmployeeJButtonActionPerformed

    private void manageOrganizationJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_manageOrganizationJButtonActionPerformed
        
        
//        HospitalAreaJPanel hospitalAreaJPanel = new HospitalAreaJPanel(userProcessContainer, ua, system);
//        userProcessContainer.add("hospitalAreaJPanel", hospitalAreaJPanel);
//        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        
        ManagePatientsJPanel managePatientsJPanel = new ManagePatientsJPanel(userProcessContainer, ua, system);
        userProcessContainer.add("managePatientsJPanel", managePatientsJPanel);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_manageOrganizationJButtonActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable availableVaccinesJTable;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton manageEmployeeJButton;
    private javax.swing.JButton manageOrganizationJButton;
    private javax.swing.JTable patientWorkRequestJTable;
    private javax.swing.JLabel valueLabel;
    // End of variables declaration//GEN-END:variables

    private void populateHospitalName() {
        for(Hospital h: system.getHospitalDirectory().getHospitalList()){
            if(h.getUserAccount().getUsername().equals(ua.getUsername())){
                valueLabel.setText(h.getHospitalName());
            }
        }
    }

    private void populatePatientWorkRequestJTable() {
        DefaultTableModel model = (DefaultTableModel) patientWorkRequestJTable.getModel();
        
        model.setRowCount(0);
        
        
        
        for(Patient patient: system.getPatientDirectory().getPatientList()){
            for(WorkRequest b : patient.getUa().getWorkQueue().getWorkRequestList()){
                for(int i = 0; i < ua.getWorkQueue().getWorkRequestList().size(); i++){
                    if(b.getReceiver().equals(ua.getWorkQueue().getWorkRequestList().get(i).getReceiver())){
                        Object[] row = new Object[3];
                        row[0] = patient.getId();
                        row[1] = patient.getName();
                        row[2] = patient.getVaccineType();
                        model.addRow(row);
                    }
                }
            }
        }
    }

    private void populateAvailableVaccinesJTable() {
        DefaultTableModel model = (DefaultTableModel) availableVaccinesJTable.getModel();
        
        model.setRowCount(0);
        
        
        for(Hospital h : system.getHospitalDirectory().getHospitalList()){
            for(VaccineProduct v : h.getVaccineDirectory().getVaccineProductList()){
                Object[] row = new Object[2];
                row[0] = v;
                row[1] = v.getType();
                model.addRow(row);
            }
        }
        
        
//        for(Patient patient: system.getPatientDirectory().getPatientList()){
//            for(WorkRequest b : patient.getUa().getWorkQueue().getWorkRequestList()){
//                for(int i = 0; i < ua.getWorkQueue().getWorkRequestList().size(); i++){
//                    if(b.getReceiver().equals(ua.getWorkQueue().getWorkRequestList().get(i).getReceiver())){
//                        Object[] row = new Object[3];
//                        row[0] = patient.getId();
//                        row[1] = patient.getName();
//                        row[2] = patient.getVaccineType();
//                        model.addRow(row);
//                    }
//                }
//            }
//        }
    }
    
}
